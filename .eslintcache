[{"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Login.js":"2","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Main.js":"3","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\App.js":"4","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AdminIndex.js":"5","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AddArticle.js":"6","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\config\\apiAdminUrl.js":"7","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\ArticleList.js":"8","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\index.js":"9","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\AddType.js":"10","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\UpdateType.js":"11","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\index.js":"12","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\AddMusic.js":"13","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\UpdateMusic.js":"14","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Chart.js":"15"},{"size":175,"mtime":1608517884689,"results":"16","hashOfConfig":"17"},{"size":3120,"mtime":1610079400344,"results":"18","hashOfConfig":"17"},{"size":659,"mtime":1612240733303,"results":"19","hashOfConfig":"17"},{"size":167,"mtime":1608517854880,"results":"20","hashOfConfig":"17"},{"size":4381,"mtime":1612245829782,"results":"21","hashOfConfig":"17"},{"size":10001,"mtime":1613702685804,"results":"22","hashOfConfig":"17"},{"size":1018,"mtime":1612351485429,"results":"23","hashOfConfig":"17"},{"size":3482,"mtime":1612409164198,"results":"24","hashOfConfig":"17"},{"size":3867,"mtime":1612436874526,"results":"25","hashOfConfig":"17"},{"size":2419,"mtime":1610349742734,"results":"26","hashOfConfig":"17"},{"size":2485,"mtime":1610530798137,"results":"27","hashOfConfig":"17"},{"size":3866,"mtime":1612436879260,"results":"28","hashOfConfig":"17"},{"size":3230,"mtime":1611051652029,"results":"29","hashOfConfig":"17"},{"size":2729,"mtime":1611041129880,"results":"30","hashOfConfig":"17"},{"size":3090,"mtime":1612495395697,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1khjs7v",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\index.js",[],["77","78"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Login.js",["79"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css'\r\nimport { Card, Input, Button, Form, Spin, message } from 'antd'\r\nimport '../static/css/Login.css'\r\nimport {\r\n    UserOutlined,\r\n    LockTwoTone\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport servicePath from '../config/apiAdminUrl'\r\n\r\n\r\nfunction Login(props) {\r\n    const [form] = Form.useForm();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const onSubmit = (value) => {\r\n        setIsLoading(true)\r\n        // 获取cookies的方法\r\n        // function getCookie(name) {\r\n        //     var arr, reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\r\n        //     // eslint-disable-next-line no-cond-assign\r\n        //     if (arr = document.cookie.match(reg))\r\n        //         return unescape(arr[2]);\r\n        //     else\r\n        //         return null;\r\n        // }\r\n        axios({\r\n            url: servicePath.login,\r\n            method: \"POST\",\r\n            // headers: {\r\n            //     // eslint-disable-next-line no-undef\r\n            //     'x-csrf-token': getCookie(\"csrfToken\"), // 前后端不分离的情况加每次打开客户端，egg会直接在客户端的 Cookie 中写入密钥 ，密钥的 Key 就是 'scrfToken' 这个字段，所以直接获取就好了\r\n            // },\r\n            data: {\r\n                username: value.username,\r\n                password: value.password\r\n            },\r\n            // withCredentials: true\r\n        })\r\n            .then(\r\n                res => {\r\n                    setIsLoading(false)\r\n                    if (res.data.data == '登录成功') {\r\n                        console.log(res)\r\n                        localStorage.setItem('openId', res.data.openId)\r\n                        props.history.push('/index')\r\n                    } else {\r\n                        message.error('登录失败')\r\n                    }\r\n\r\n                }\r\n            )\r\n    }\r\n    return (\r\n        <div className='login-div'>\r\n            <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                <Card title='登录页面' bordered={true} style={{ width: 400, textAlign: 'center' }}>\r\n                    <Form\r\n                        onFinish={onSubmit}\r\n                        form={form}\r\n                    >\r\n                        <Form.Item name=\"username\" rules={[{ required: true, message: '请输入账号' }]}>\r\n                            <Input prefix={<UserOutlined color=\"#40a9ff\" />} placeholder=\"请输入账号\" />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"password\" rules={[{ required: true, message: '请输入密码' }]}>\r\n                            <Input.Password prefix={<LockTwoTone />} placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{ width: '100%' }} htmlType=\"submit\" type=\"primary\">登录</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\nexport default Login",["80","81"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Main.js",[],["82","83"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\App.js",[],["84","85"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AdminIndex.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AddArticle.js",["86","87"],"import React, { useState, useEffect } from 'react'\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport { Row, Col, Button, Input, Select, DatePicker, message } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiAdminUrl'\r\nimport moment from 'moment'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\nfunction AddArticle(props) {\r\n\r\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate, setShowDate] = useState()   //发布日期\r\n    // const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType, setSelectType] = useState() //选择的文章类别\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    marked.setOptions({\r\n        renderer: marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fecthType();\r\n        if (props.location?.query?.record) {\r\n            let values = props.location.query.record;\r\n            console.log(values)\r\n            setArticleId(values._id)\r\n            setSelectType(values.typeId)\r\n            getArticle()\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const changeContent = (e) => {\r\n        setArticleContent(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setMarkdownContent(html)\r\n    }\r\n\r\n    const changeIntroduce = (e) => {\r\n        setIntroducemd(e.target.value)\r\n        let html = marked(e.target.value);\r\n        setIntroducehtml(html)\r\n    }\r\n\r\n    const changeType = (value) => {\r\n        setSelectType(value)\r\n    }\r\n\r\n    const changeCreateTime = (date, dateString) => {\r\n        console.log(date)\r\n        console.log(new Date(dateString).getTime())\r\n        setShowDate(dateString)\r\n    }\r\n\r\n    const changeArtivleTitle = (e) => {\r\n        setArticleTitle(e.target.value)\r\n    }\r\n\r\n    const getArticle = () => {\r\n        if (props.location?.query?.record) {\r\n            let values = props.location.query.record;\r\n            setArticleTitle(values.title)\r\n            setArticleContent(values.content)\r\n            let htmlContent = marked(values.content);\r\n            setIntroducehtml(htmlContent)\r\n            setIntroducemd(values.introduce)\r\n            let htmlIntroduce = marked(values.introduce);\r\n            setIntroducehtml(htmlIntroduce)\r\n            console.log(values.createTime)\r\n            setShowDate(moment(values.createTime))\r\n        }\r\n    }\r\n    const saveArticle = () => {\r\n        setIsLoading(true)\r\n        if (!selectedType) {\r\n            message.error('请选择文章类型')\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000);\r\n            return false\r\n        } else if (!articleTitle) {\r\n            message.error('请输入文章标题')\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000);\r\n            return false\r\n        } else if (!articleContent) {\r\n            message.error('请输入文章内容')\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000);\r\n            return false\r\n        } else if (!introducemd) {\r\n            message.error('请输入简介')\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000);\r\n            return false\r\n        } else if (!showDate) {\r\n            message.error('请选择日期')\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000);\r\n            return false\r\n        }\r\n        let dateText = moment(showDate);\r\n\r\n        let dataProps = {}\r\n\r\n        dataProps.title = articleTitle;\r\n        dataProps.content = articleContent;\r\n        dataProps.introduce = introducemd;\r\n        dataProps.createTime = (new Date(dateText).getTime());\r\n        dataProps.typeId = selectedType;\r\n\r\n        if (articleId === 0) {\r\n            console.log(dataProps)\r\n            // dataProps.visitCount = 0\r\n            axios({\r\n                url: servicePath.saveArticle,\r\n                method: \"POST\",\r\n                data: dataProps,\r\n                // withCredentials: true\r\n            })\r\n                .then(\r\n                    res => {\r\n                        if (res.data.insertId) {\r\n                            setIsLoading(false)\r\n                            setArticleId(res.data.insertId)\r\n                            message.success('保存成功')\r\n                        } else {\r\n                            setIsLoading(false)\r\n                            message.error('保存失败')\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        setIsLoading(false)\r\n                    }\r\n                )\r\n        } else {\r\n            dataProps._id = articleId\r\n            axios({\r\n                url: servicePath.updateArticle,\r\n                method: \"POST\",\r\n                data: dataProps,\r\n                // withCredentials: true\r\n            })\r\n                .then(\r\n                    res => {\r\n                        if (res.data.data.ok === 1) {\r\n                            setIsLoading(false)\r\n                            message.success('修改成功')\r\n                        } else {\r\n                            setIsLoading(false)\r\n                            message.error('修改失败')\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        setIsLoading(false)\r\n                        console.log(JSON.stringify(error))\r\n                    }\r\n                )\r\n        }\r\n\r\n    }\r\n    const fecthType = async () => {\r\n        const resType = await axios({\r\n            url: servicePath.getType,\r\n            method: 'GET',\r\n            // withCredentials: true\r\n        })\r\n            .then(\r\n                res => {\r\n                    if (res.data.data == '没有登录') {\r\n                        localStorage.removeItem('openId')\r\n                        props.history.push('/');\r\n                    }\r\n                    return res.data.data;\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    return error\r\n                }\r\n            )\r\n        setTypeInfo(resType)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                <Col span={18}>\r\n                    <Row gutter={10}>\r\n                        <Col span={20}>\r\n                            <Input value={articleTitle} onChange={changeArtivleTitle} placeholder=\"请输入博客标题\" size=\"large\" />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Select onChange={changeType} value={selectedType} placeholder=\"请选择文章类型\" size=\"large\">\r\n                                {typeInfo?.map((item, index) => {\r\n                                    return <Option value={item._id} key={index}>{item.typeName}</Option>\r\n                                })}\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={10}>\r\n                        <Col span={12}>\r\n                            <TextArea value={articleContent} onChange={changeContent} className=\"markdown-content\" rows=\"35\" placeholder=\"请输入文章内容\" />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"show-html\" dangerouslySetInnerHTML={{ __html: markdownContent }}></div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Button size='large'>暂存文章</Button> &nbsp;\r\n                            <Button type=\"primary\" onClick={saveArticle} loading={isLoading} size='large'>发布文章</Button>\r\n                            <br />\r\n                            <Col span={24}>\r\n                                <br />\r\n                                <TextArea value={introducemd} onChange={changeIntroduce} rows={4} placeholder=\"请输入简介\" />\r\n                                <br /><br />\r\n                                <div dangerouslySetInnerHTML={{ __html: introducehtml }} className=\"introduce-html\"></div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div className=\"date-select\">\r\n                                    <DatePicker format=\"YYYY-MM-DD\" value={showDate ? moment(showDate) : null} onChange={changeCreateTime} placeholder=\"请输入发布日期\" size=\"large\" />\r\n                                </div>\r\n                            </Col>\r\n                            {/* <Col span={12}>\r\n                                <div className=\"date-select\">\r\n                                    <DatePicker placeholder=\"请输入修改日期\" size=\"large\"/>\r\n                                </div>\r\n                            </Col> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle\r\n\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\config\\apiAdminUrl.js",[],["88","89"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\ArticleList.js",[],["90","91"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\index.js",["92"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\AddType.js",["93"],"import React, { useState } from 'react'\r\nimport { Modal, Form, Input, InputNumber, message, Button } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl';\r\n\r\n\r\nexport default (props) => {\r\n    console.log(props)\r\n    const [form] = Form.useForm();\r\n\r\n    const { onCancel, onSuccess, visible } = props;\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.addType,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                message.success('保存成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('保存失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error(error)\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={onCancel}\r\n            title=\"添加类型\"\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n            // form={form}\r\n            >\r\n                <Form.Item\r\n                    label=\"名称\"\r\n                    name=\"typeName\"\r\n                    rules={[{ message: '请输入名称', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入名称\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"排序\"\r\n                    name=\"sort\"\r\n                    rules={[{ required: true, message: '请输入排序' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} placeholder=\"请输入排序\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"icon\" name=\"icon\" rules={[{ required: true, message: '请输入icon' }]}>\r\n                    <Input placeholder=\"请输入Icon\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}",["94","95"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\UpdateType.js",["96"],"import React, { useState } from 'react'\r\nimport { Form, Modal, Button, Input, InputNumber, message } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl'\r\n\r\nexport default (props) => {\r\n    const [form] = Form.useForm();\r\n    const { values, visible, onCancel, onSuccess } = props;\r\n    console.log(values)\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        formValues._id = values._id;\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.updateType,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                message.success('保存成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('保存失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error(error)\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"修改信息\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n                initialValues={{ ...values }}\r\n            >\r\n                <Form.Item\r\n                    label=\"名称\"\r\n                    name=\"typeName\"\r\n                    rules={[{ message: '请输入名称', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入名称\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"排序\"\r\n                    name=\"sort\"\r\n                    rules={[{ required: true, message: '请输入排序' }]}\r\n                >\r\n                    <InputNumber style={{ width: '100%' }} placeholder=\"请输入排序\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"icon\" name=\"icon\" rules={[{ required: true, message: '请输入icon' }]}>\r\n                    <Input placeholder=\"请输入Icon\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\index.js",["97"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, message, Popconfirm, Space, Table, Avatar } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../config/apiAdminUrl'\r\nimport AddMusic from './components/AddMusic'\r\nimport UpdateMusic from './components/UpdateMusic'\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nexport default (props) => {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [musicVisible, setMusicVisible] = useState(false);\r\n    const [updateMusicVisible, setUpdateMusicVisible] = useState(false);\r\n    const [values, setValues] = useState()\r\n\r\n    useEffect(() => {\r\n        getMusic();\r\n    }, [])\r\n\r\n    const getMusic = () => {\r\n        axios({\r\n            url: servicePath.getMusic,\r\n            method: 'GET',\r\n\r\n        }).then((res) => {\r\n            setDataSource(res?.data?.data)\r\n        })\r\n    }\r\n\r\n    const onDelete = async (id) => {\r\n        message.loading({ content: '提交中' })\r\n        try {\r\n            const response = await axios(servicePath.deleteMusic + id)\r\n            if (response) {\r\n                message.success('提交成功')\r\n            } else {\r\n                message.error('提交失败')\r\n            }\r\n        } catch (error) {\r\n            message.error('提交失败')\r\n        }\r\n        getMusic();\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '歌名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '封面',\r\n            dataIndex: 'cover',\r\n            render: cover => {\r\n                return <Avatar src={cover} />\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'options',\r\n            render: (_, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Button size=\"small\" type=\"primary\" onClick={() => {\r\n                            setUpdateMusicVisible(true);\r\n                            setValues(record)\r\n                        }}><EditOutlined />修改</Button>\r\n                        <Popconfirm\r\n                            title=\"确定要删除这个歌曲吗？\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={() => onDelete(record._id)}\r\n                        >\r\n                            <Button size=\"small\" type=\"primary\" danger><DeleteOutlined />删除</Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const onAddCancel = () => {\r\n        setMusicVisible(false)\r\n    }\r\n    const onAddSuccess = () => {\r\n        setMusicVisible(false)\r\n        getMusic()\r\n    }\r\n\r\n    const onUpdateCancel = () => {\r\n        setUpdateMusicVisible(false)\r\n    }\r\n    const onUpdateSuccess = () => {\r\n        setUpdateMusicVisible(false);\r\n        getMusic()\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title='音乐列表'\r\n                extra={<Button type=\"primary\" onClick={() => {\r\n                    setMusicVisible(true)\r\n                }}><PlusOutlined />新建音乐</Button>}\r\n            >\r\n                <Table bordered rowKey=\"_id\" dataSource={dataSource} columns={columns} />\r\n            </Card>\r\n            {musicVisible ?\r\n                <AddMusic\r\n                    visible={musicVisible}\r\n                    onCancel={onAddCancel}\r\n                    onSuccess={onAddSuccess}\r\n                /> : null\r\n            }\r\n            {updateMusicVisible ?\r\n                <UpdateMusic\r\n                    visible={updateMusicVisible}\r\n                    values={values}\r\n                    onSuccess={onUpdateSuccess}\r\n                    onCancel={onUpdateCancel}\r\n                /> : null\r\n\r\n\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\AddMusic.js",["98"],"import React, { useState } from 'react'\r\nimport { Modal, Form, Input, message, Button, Upload } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { onCancel, onSuccess, visible } = props;\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.addMusic,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                console.log('---------------------')\r\n                message.success('保存成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('保存失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error('保存失败')\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={onCancel}\r\n            title=\"添加歌曲\"\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n            // form={form}\r\n            >\r\n                <Form.Item\r\n                    label=\"歌曲\"\r\n                    name=\"name\"\r\n                    rules={[{ message: '请输入歌曲', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入歌曲\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"作者\"\r\n                    name=\"artist\"\r\n                    rules={[{ required: true, message: '请输入作者' }]}\r\n                >\r\n                    <Input placeholder=\"请输入作者\" />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item label='图片' name=\"image\">\r\n                    <Upload\r\n                        name=\"avatar\"\r\n                        listType=\"picture-card\"\r\n                        style={{ width: 128, height: 128 }}\r\n                        className=\"avatar-uploader\"\r\n                        showUploadList={false}\r\n\r\n                        onChange={(e) => { console.log(e) }} >\r\n                        <img src=\"\" alt=\"avatar\" style={{ width: '100%' }} />\r\n                    </Upload>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item label=\"歌曲网址\" name=\"url\" rules={[{ required: true, message: '请输入歌曲网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲网址\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲图片\" name=\"cover\" rules={[{ required: true, message: '请输入歌曲图片网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲图片网址\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}",["99","100"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\UpdateMusic.js",["101"],"import React, { useState } from 'react'\r\nimport { Modal, Form, Input, message, Button } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl';\r\n\r\n\r\nexport default (props) => {\r\n    console.log(props)\r\n    const [form] = Form.useForm();\r\n\r\n    const { onCancel, onSuccess, visible, values } = props;\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        formValues._id = values._id;\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.updateMusic,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                message.success('修改成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('修改失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error(error)\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={onCancel}\r\n            title=\"修改歌曲\"\r\n\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n                initialValues={{ ...values }}\r\n            // form={form}\r\n            >\r\n                <Form.Item\r\n                    label=\"歌曲\"\r\n                    name=\"name\"\r\n                    rules={[{ message: '请输入歌曲', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入歌曲\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"作者\"\r\n                    name=\"artist\"\r\n                    rules={[{ required: true, message: '请输入作者' }]}\r\n                >\r\n                    <Input placeholder=\"请输入作者\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲网址\" name=\"url\" rules={[{ required: true, message: '请输入歌曲网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲网址\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲图片\" name=\"cover\" rules={[{ required: true, message: '请输入歌曲图片网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲图片网址\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Chart.js",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":44,"column":39,"nodeType":"109","messageId":"110","endLine":44,"endColumn":41},{"ruleId":"103","replacedBy":"111"},{"ruleId":"105","replacedBy":"112"},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"103","replacedBy":"115"},{"ruleId":"105","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":47,"column":8,"nodeType":"119","endLine":47,"endColumn":10,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"108","line":196,"column":39,"nodeType":"109","messageId":"110","endLine":196,"endColumn":41},{"ruleId":"103","replacedBy":"121"},{"ruleId":"105","replacedBy":"122"},{"ruleId":"103","replacedBy":"123"},{"ruleId":"105","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":9,"column":1,"nodeType":"127","endLine":124,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":7,"column":1,"nodeType":"127","endLine":73,"endColumn":2},{"ruleId":"103","replacedBy":"128"},{"ruleId":"105","replacedBy":"129"},{"ruleId":"125","severity":1,"message":"126","line":6,"column":1,"nodeType":"127","endLine":73,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":9,"column":1,"nodeType":"127","endLine":124,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":7,"column":1,"nodeType":"127","endLine":93,"endColumn":2},{"ruleId":"103","replacedBy":"130"},{"ruleId":"105","replacedBy":"131"},{"ruleId":"125","severity":1,"message":"126","line":7,"column":1,"nodeType":"127","endLine":79,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":8,"column":1,"nodeType":"127","endLine":115,"endColumn":2},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["132"],["133"],["132"],["133"],["132"],["133"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fecthType', 'getArticle', and 'props.location.query.record'. Either include them or remove the dependency array.","ArrayExpression",["134"],["132"],["133"],["132"],["133"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["132"],["133"],["132"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [fecthType, getArticle, props.location.query.record]",{"range":"137","text":"138"},[1716,1718],"[fecthType, getArticle, props.location.query.record]"]