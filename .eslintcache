[{"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Login.js":"2","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Main.js":"3","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\App.js":"4","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AdminIndex.js":"5","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AddArticle.js":"6","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\config\\apiAdminUrl.js":"7","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\ArticleList.js":"8","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\index.js":"9","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\AddType.js":"10","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\UpdateType.js":"11","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\index.js":"12","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\AddMusic.js":"13","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\UpdateMusic.js":"14","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Chart.js":"15","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\slideshow\\index.js":"16","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\slideshow\\components\\SlideShowEdit.js":"17","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\router\\index.js":"18","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\plugins\\request.js":"19","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\cookie\\cookie.js":"20"},{"size":175,"mtime":1608517884689,"results":"21","hashOfConfig":"22"},{"size":2921,"mtime":1622710091215,"results":"23","hashOfConfig":"22"},{"size":476,"mtime":1618749753441,"results":"24","hashOfConfig":"22"},{"size":169,"mtime":1622602589687,"results":"25","hashOfConfig":"22"},{"size":5369,"mtime":1622531685407,"results":"26","hashOfConfig":"22"},{"size":8974,"mtime":1629450001114,"results":"27","hashOfConfig":"22"},{"size":1342,"mtime":1629523395565,"results":"28","hashOfConfig":"22"},{"size":5017,"mtime":1629455704488,"results":"29","hashOfConfig":"22"},{"size":3867,"mtime":1612436874526,"results":"30","hashOfConfig":"22"},{"size":2017,"mtime":1622517833060,"results":"31","hashOfConfig":"22"},{"size":2093,"mtime":1629446807534,"results":"32","hashOfConfig":"22"},{"size":3866,"mtime":1612436879260,"results":"33","hashOfConfig":"22"},{"size":3230,"mtime":1611051652029,"results":"34","hashOfConfig":"22"},{"size":2729,"mtime":1611041129880,"results":"35","hashOfConfig":"22"},{"size":2694,"mtime":1622710044901,"results":"36","hashOfConfig":"22"},{"size":3108,"mtime":1629455470037,"results":"37","hashOfConfig":"22"},{"size":4372,"mtime":1629447018681,"results":"38","hashOfConfig":"22"},{"size":585,"mtime":1622628109946,"results":"39","hashOfConfig":"40"},{"size":702,"mtime":1622607959185,"results":"41","hashOfConfig":"40"},{"size":2,"mtime":1622686069055,"results":"42","hashOfConfig":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x9e30c",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1khjs7v",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\index.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Login.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Main.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\App.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AdminIndex.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\AddArticle.js",["95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport marked from \"marked\";\r\nimport \"../static/css/AddArticle.css\";\r\nimport { Row, Col, Button, Input, Select, DatePicker, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiAdminUrl\";\r\nimport moment from \"moment\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nfunction AddArticle(props) {\r\n  const [articleId, setArticleId] = useState(0); // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  const [articleTitle, setArticleTitle] = useState(\"\"); //文章标题\r\n  const [articleContent, setArticleContent] = useState(\"\"); //markdown的编辑内容\r\n  const [markdownContent, setMarkdownContent] = useState(\"预览内容\"); //html内容\r\n  const [introducemd, setIntroducemd] = useState(); //简介的markdown内容\r\n  const [introducehtml, setIntroducehtml] = useState(\"等待编辑\"); //简介的html内容\r\n  const [showDate, setShowDate] = useState(); //发布日期\r\n  // const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n  const [typeInfo, setTypeInfo] = useState([]); // 文章类别信息\r\n  const [selectedType, setSelectType] = useState(); //选择的文章类别\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  marked.setOptions({\r\n    renderer: marked.Renderer(),\r\n    gfm: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    tables: true,\r\n    breaks: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fecthType();\r\n    if (props.location?.query?.record) {\r\n      let values = props.location.query.record;\r\n      console.log(values);\r\n      setArticleId(values._id);\r\n      setSelectType(values.typeId);\r\n      getArticle();\r\n    }\r\n  }, []);\r\n\r\n  const changeContent = (e) => {\r\n    setArticleContent(e.target.value);\r\n    let html = marked(e.target.value);\r\n    setMarkdownContent(html);\r\n  };\r\n\r\n  const changeIntroduce = (e) => {\r\n    setIntroducemd(e.target.value);\r\n    let html = marked(e.target.value);\r\n    setIntroducehtml(html);\r\n  };\r\n\r\n  const changeType = (value) => {\r\n    setSelectType(value);\r\n  };\r\n\r\n  const changeCreateTime = (date, dateString) => {\r\n    setShowDate(dateString);\r\n  };\r\n\r\n  const changeArtivleTitle = (e) => {\r\n    setArticleTitle(e.target.value);\r\n  };\r\n\r\n  const getArticle = () => {\r\n    if (props.location?.query?.record) {\r\n      let values = props.location.query.record;\r\n      setArticleTitle(values.title);\r\n      setArticleContent(values.content);\r\n      let htmlContent = marked(values.content);\r\n      setIntroducehtml(htmlContent);\r\n      setIntroducemd(values.introduce);\r\n      let htmlIntroduce = marked(values.introduce);\r\n      setIntroducehtml(htmlIntroduce);\r\n      console.log(values.createTime);\r\n      setShowDate(moment(values.createTime));\r\n    }\r\n  };\r\n  const saveArticle = () => {\r\n    setIsLoading(true);\r\n    if (!selectedType) {\r\n      message.error(\"请选择文章类型\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    } else if (!articleTitle) {\r\n      message.error(\"请输入文章标题\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    } else if (!articleContent) {\r\n      message.error(\"请输入文章内容\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    } else if (!introducemd) {\r\n      message.error(\"请输入简介\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    } else if (!showDate) {\r\n      message.error(\"请选择日期\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 1000);\r\n      return false;\r\n    }\r\n    let dateText = moment(showDate);\r\n\r\n    let dataProps = {};\r\n\r\n    dataProps.title = articleTitle;\r\n    dataProps.content = articleContent;\r\n    dataProps.introduce = introducemd;\r\n    dataProps.createTime = new Date(dateText).getTime();\r\n    dataProps.typeId = selectedType;\r\n\r\n    if (articleId === 0) {\r\n      console.log(dataProps);\r\n      // dataProps.visitCount = 0\r\n      axios({\r\n        url: servicePath.saveArticle,\r\n        method: \"POST\",\r\n        data: dataProps,\r\n        // withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          if (res.data.insertId) {\r\n            setIsLoading(false);\r\n            setArticleId(res.data.insertId);\r\n            message.success(\"保存成功\");\r\n            props.history.push(\"/index/list/\");\r\n          } else {\r\n            setIsLoading(false);\r\n            message.error(\"保存失败\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      dataProps._id = articleId;\r\n      axios({\r\n        url: servicePath.updateArticle,\r\n        method: \"POST\",\r\n        data: dataProps,\r\n        // withCredentials: true\r\n      })\r\n        .then((res) => {\r\n          if (res.data.data.ok === 1) {\r\n            setIsLoading(false);\r\n            message.success(\"修改成功\");\r\n          } else {\r\n            setIsLoading(false);\r\n            message.error(\"修改失败\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setIsLoading(false);\r\n          console.log(JSON.stringify(error));\r\n        });\r\n    }\r\n  };\r\n  const fecthType = async () => {\r\n    const resType = await axios({\r\n      url: servicePath.getType,\r\n      method: \"GET\",\r\n      // withCredentials: true\r\n    })\r\n      .then((res) => {\r\n        if (res.data.data == \"没有登录\") {\r\n          localStorage.removeItem(\"openId\");\r\n          props.history.push(\"/\");\r\n        }\r\n        return res.data.data;\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n    setTypeInfo(resType);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={5}>\r\n        <Col span={18}>\r\n          <Row gutter={10}>\r\n            <Col span={20}>\r\n              <Input\r\n                value={articleTitle}\r\n                onChange={changeArtivleTitle}\r\n                placeholder=\"请输入博客标题\"\r\n                size=\"large\"\r\n              />\r\n            </Col>\r\n            <Col span={4}>\r\n              <Select\r\n                onChange={changeType}\r\n                value={selectedType}\r\n                placeholder=\"请选择文章类型\"\r\n                size=\"large\"\r\n              >\r\n                {typeInfo?.map((item, index) => {\r\n                  return (\r\n                    <Option value={item._id} key={index}>\r\n                      {item.typeName}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row gutter={10}>\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={articleContent}\r\n                onChange={changeContent}\r\n                className=\"markdown-content\"\r\n                rows=\"35\"\r\n                placeholder=\"请输入文章内容\"\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className=\"show-html\"\r\n                dangerouslySetInnerHTML={{ __html: markdownContent }}\r\n              ></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Button size=\"large\">暂存文章</Button> &nbsp;\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={saveArticle}\r\n                loading={isLoading}\r\n                size=\"large\"\r\n              >\r\n                发布文章\r\n              </Button>\r\n              <br />\r\n              <Col span={24}>\r\n                <br />\r\n                <TextArea\r\n                  value={introducemd}\r\n                  onChange={changeIntroduce}\r\n                  rows={4}\r\n                  placeholder=\"请输入简介\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: introducehtml }}\r\n                  className=\"introduce-html\"\r\n                ></div>\r\n              </Col>\r\n              <Col span={12}>\r\n                <div className=\"date-select\">\r\n                  <DatePicker\r\n                    format=\"YYYY-MM-DD\"\r\n                    value={showDate ? moment(showDate) : null}\r\n                    onChange={changeCreateTime}\r\n                    placeholder=\"请输入发布日期\"\r\n                    size=\"large\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col span={12}>\r\n                                <div className=\"date-select\">\r\n                                    <DatePicker placeholder=\"请输入修改日期\" size=\"large\"/>\r\n                                </div>\r\n                            </Col> */}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddArticle;\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\config\\apiAdminUrl.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\ArticleList.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Popconfirm,\r\n  message,\r\n  Button,\r\n  Card,\r\n  Input,\r\n  Select,\r\n  Form,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiAdminUrl\";\r\nimport \"../static/css/ArticleList.css\";\r\nimport moment from \"moment\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nfunction ArticleList(props) {\r\n  const { Option } = Select;\r\n  const [form] = Form.useForm();\r\n  const [list, setList] = useState([]);\r\n  const [totle, setTotle] = useState();\r\n  const [type, setType] = useState([]);\r\n  const [current, setCurrent] = useState(1);\r\n  const [params, setParams] = useState({ page: 1, limit: 10 });\r\n  useEffect(() => {\r\n    getArticleList();\r\n  }, []);\r\n\r\n  const getArticle = (params) => {\r\n    axios.get(servicePath.getArticle, { params }).then((res) => {\r\n      setList(res.data?.data);\r\n      setTotle(res.data?.totle);\r\n    });\r\n  };\r\n  const getArticleList = () => {\r\n    getArticle(params);\r\n    axios({\r\n      url: servicePath.getType,\r\n      method: \"GET\",\r\n      // withCredentials: true\r\n    }).then((res) => {\r\n      setType(res.data.data);\r\n    });\r\n  };\r\n  const onDeleteConfirm = async (id) => {\r\n    // , { withCredentials: true }\r\n    try {\r\n      const response = await axios(servicePath.deleteArticle + id);\r\n      console.log(response);\r\n      if (response.data?.success) {\r\n        message.success(\"删除成功\");\r\n        getArticleList();\r\n      } else {\r\n        message.error(\"删除失败\");\r\n      }\r\n    } catch (error) {\r\n      message.error(\"删除失败\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"标题\",\r\n      dataIndex: \"title\",\r\n    },\r\n    {\r\n      title: \"发布时间\",\r\n      dataIndex: \"createTime\",\r\n      render: (createTime) => {\r\n        return createTime ? moment(createTime).format(\"YYYY-MM-DD\") : null;\r\n      },\r\n    },\r\n    {\r\n      title: \"访问次数\",\r\n      dataIndex: \"visitCount\",\r\n    },\r\n    {\r\n      title: \"文章分类\",\r\n      dataIndex: \"typeId\",\r\n      render: (_, record) => {\r\n        for (let i = 0; i < type.length; i++) {\r\n          if (type[i]._id === record.typeId) {\r\n            return type[i].typeName;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"options\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              props.history.push({\r\n                pathname: \"/index/add\",\r\n                query: {\r\n                  record,\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            <EditOutlined />\r\n            修改\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"要将文章删除吗？\"\r\n            onConfirm={() => onDeleteConfirm(record._id)}\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button size=\"small\" type=\"primary\" danger>\r\n              <DeleteOutlined />\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const pagination = { current: current, pageSize: 10, total: totle };\r\n  const onChange = (e) => {\r\n    setCurrent(e.current);\r\n    params.page = e.current;\r\n    getArticle(params);\r\n  };\r\n\r\n  const onFinish = (value) => {\r\n    setParams({\r\n      title: value?.title,\r\n      typeId: value?.typeId,\r\n      page: 1,\r\n      limit: 10,\r\n    });\r\n    let newParams = {\r\n      title: value?.title,\r\n      typeId: value?.typeId,\r\n      page: 1,\r\n      limit: 10,\r\n    };\r\n    getArticle(newParams);\r\n    setCurrent(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Form layout=\"inline\" form={form} onFinish={onFinish}>\r\n          <Form.Item name=\"title\" label=\"文章标题\">\r\n            <Input\r\n              placeholder=\"请输入文章标题\"\r\n              style={{ width: 200 }}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"typeId\" label=\"文章分类\">\r\n            <Select\r\n              placeholder=\"请选择文章分类\"\r\n              style={{ width: 200 }}\r\n              allowClear\r\n            >\r\n              {type?.map((item, index) => {\r\n                return (\r\n                  <Option value={item._id} key={index}>\r\n                    {item.typeName}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查询\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n      <Card title=\"文章列表\">\r\n        <Table\r\n          bordered\r\n          justify=\"center\"\r\n          rowKey=\"_id\"\r\n          dataSource={list}\r\n          columns={columns}\r\n          pagination={pagination}\r\n          onChange={onChange}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default ArticleList;\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\index.js",["98"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, message, Popconfirm, Space, Table } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../config/apiAdminUrl'\r\nimport AddType from './components/AddType'\r\nimport UpdateType from './components/UpdateType'\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nexport default () => {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [typeVisible, setTypeVisible] = useState(false)\r\n    const [typeValues, setTypeValues] = useState()\r\n    const [updatetypeVisible, setupdateTypeVisible] = useState(false)\r\n\r\n    console.log(dataSource)\r\n    useEffect(() => {\r\n        getType();\r\n    }, [])\r\n\r\n    const getType = () => {\r\n        axios({\r\n            url: servicePath.getType,\r\n            method: 'GET',\r\n        }).then((res) => {\r\n            setDataSource(res?.data?.data)\r\n        })\r\n    }\r\n\r\n    const onDelete = async (id) => {\r\n        message.loading({ content: '提交中' })\r\n        try {\r\n            const response = await axios(servicePath.deleteType + id)\r\n            if (response?.data?.data?._id) {\r\n                message.success('提交成功')\r\n            } else {\r\n                message.error('提交失败')\r\n            }\r\n        } catch (error) {\r\n            message.error('提交失败')\r\n        }\r\n        getType();\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'typeName',\r\n        },\r\n        {\r\n            title: '排序',\r\n            dataIndex: 'sort'\r\n        },\r\n        {\r\n            title: 'icon',\r\n            dataIndex: 'icon'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'options',\r\n            render: (_, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Button type=\"primary\" size=\"small\" onClick={() => {\r\n                            setupdateTypeVisible(true)\r\n                            setTypeValues(record)\r\n                        }}><EditOutlined />修改</Button>\r\n                        <Popconfirm\r\n                            title=\"确定要删除这个类型吗？\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={() => onDelete(record._id)}\r\n                        >\r\n                            <Button type=\"primary\" size=\"small\" danger><DeleteOutlined />删除</Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n    const onSuccess = () => {\r\n        setTypeVisible(false)\r\n        getType()\r\n    }\r\n    const onCancel = () => {\r\n        setTypeVisible(false)\r\n    }\r\n\r\n    const onSuccessUpdate = () => {\r\n        setupdateTypeVisible(false)\r\n        getType()\r\n    }\r\n    const onCancelUpdate = () => {\r\n        setupdateTypeVisible(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card\r\n                title=\"类型列表\"\r\n                extra={<Button type=\"primary\" onClick={() => {\r\n                    setTypeVisible(true)\r\n                }}><PlusOutlined />新建类型</Button>}\r\n            >\r\n                <Table bordered rowKey=\"_id\" dataSource={dataSource} columns={columns} />\r\n\r\n            </Card>\r\n            {typeVisible ?\r\n                <AddType\r\n                    visible={typeVisible}\r\n                    onSuccess={onSuccess}\r\n                    onCancel={onCancel}\r\n                /> : null\r\n            }\r\n            {updatetypeVisible ?\r\n                <UpdateType\r\n                    visible={updatetypeVisible}\r\n                    onSuccess={onSuccessUpdate}\r\n                    onCancel={onCancelUpdate}\r\n                    values={typeValues}\r\n                /> : null\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\AddType.js",["99"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Input, InputNumber, message, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../../config/apiAdminUrl\";\r\n\r\nexport default (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { onCancel, onSuccess, visible } = props;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const onSubmit = async (formValues) => {\r\n    setSubmitting(true);\r\n    try {\r\n      console.log(formValues);\r\n      const response = await axios({\r\n        url: servicePath.addType,\r\n        method: \"POST\",\r\n        data: formValues,\r\n      });\r\n      if (response) {\r\n        message.success(\"保存成功\");\r\n        setSubmitting(false);\r\n        onSuccess();\r\n      } else {\r\n        message.error(\"保存失败\");\r\n      }\r\n    } catch (error) {\r\n      message.error(error);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <Modal visible={visible} footer={null} onCancel={onCancel} title=\"添加类型\">\r\n      <Form\r\n        form={form}\r\n        name=\"modalUpdate\"\r\n        layout=\"horizontal\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Form.Item\r\n          label=\"名称\"\r\n          name=\"typeName\"\r\n          rules={[{ message: \"请输入名称\", required: true }]}\r\n        >\r\n          <Input placeholder=\"请输入名称\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"排序\"\r\n          name=\"sort\"\r\n          rules={[{ required: true, message: \"请输入排序\" }]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} placeholder=\"请输入排序\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"icon\"\r\n          name=\"icon\"\r\n          rules={[{ required: true, message: \"请输入icon\" }]}\r\n        >\r\n          <Input placeholder=\"请输入Icon\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\type\\components\\UpdateType.js",["100"],"import React, { useState } from \"react\";\r\nimport { Form, Modal, Button, Input, InputNumber, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport servicePath from \"../../../config/apiAdminUrl\";\r\n\r\nexport default (props) => {\r\n  const [form] = Form.useForm();\r\n  const { values, visible, onCancel, onSuccess } = props;\r\n  console.log(values);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const onSubmit = async (formValues) => {\r\n    setSubmitting(true);\r\n    formValues._id = values._id;\r\n    try {\r\n      const response = await axios({\r\n        url: servicePath.updateType,\r\n        method: \"POST\",\r\n        data: formValues,\r\n      });\r\n      if (response) {\r\n        message.success(\"保存成功\");\r\n        setSubmitting(false);\r\n        onSuccess();\r\n      } else {\r\n        message.error(\"保存失败\");\r\n      }\r\n    } catch (error) {\r\n      message.error(error);\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"修改信息\" visible={visible} onCancel={onCancel} footer={null}>\r\n      <Form\r\n        form={form}\r\n        name=\"modalUpdate\"\r\n        layout=\"horizontal\"\r\n        onFinish={onSubmit}\r\n        initialValues={{ ...values }}\r\n      >\r\n        <Form.Item\r\n          label=\"名称\"\r\n          name=\"typeName\"\r\n          rules={[{ message: \"请输入名称\", required: true }]}\r\n        >\r\n          <Input placeholder=\"请输入名称\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"排序\"\r\n          name=\"sort\"\r\n          rules={[{ required: true, message: \"请输入排序\" }]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} placeholder=\"请输入排序\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"icon\"\r\n          name=\"icon\"\r\n          rules={[{ required: true, message: \"请输入icon\" }]}\r\n        >\r\n          <Input placeholder=\"请输入Icon\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\index.js",["101"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, message, Popconfirm, Space, Table, Avatar } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../config/apiAdminUrl'\r\nimport AddMusic from './components/AddMusic'\r\nimport UpdateMusic from './components/UpdateMusic'\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nexport default (props) => {\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [musicVisible, setMusicVisible] = useState(false);\r\n    const [updateMusicVisible, setUpdateMusicVisible] = useState(false);\r\n    const [values, setValues] = useState()\r\n\r\n    useEffect(() => {\r\n        getMusic();\r\n    }, [])\r\n\r\n    const getMusic = () => {\r\n        axios({\r\n            url: servicePath.getMusic,\r\n            method: 'GET',\r\n\r\n        }).then((res) => {\r\n            setDataSource(res?.data?.data)\r\n        })\r\n    }\r\n\r\n    const onDelete = async (id) => {\r\n        message.loading({ content: '提交中' })\r\n        try {\r\n            const response = await axios(servicePath.deleteMusic + id)\r\n            if (response) {\r\n                message.success('提交成功')\r\n            } else {\r\n                message.error('提交失败')\r\n            }\r\n        } catch (error) {\r\n            message.error('提交失败')\r\n        }\r\n        getMusic();\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '歌名',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '封面',\r\n            dataIndex: 'cover',\r\n            render: cover => {\r\n                return <Avatar src={cover} />\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'options',\r\n            render: (_, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Button size=\"small\" type=\"primary\" onClick={() => {\r\n                            setUpdateMusicVisible(true);\r\n                            setValues(record)\r\n                        }}><EditOutlined />修改</Button>\r\n                        <Popconfirm\r\n                            title=\"确定要删除这个歌曲吗？\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={() => onDelete(record._id)}\r\n                        >\r\n                            <Button size=\"small\" type=\"primary\" danger><DeleteOutlined />删除</Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const onAddCancel = () => {\r\n        setMusicVisible(false)\r\n    }\r\n    const onAddSuccess = () => {\r\n        setMusicVisible(false)\r\n        getMusic()\r\n    }\r\n\r\n    const onUpdateCancel = () => {\r\n        setUpdateMusicVisible(false)\r\n    }\r\n    const onUpdateSuccess = () => {\r\n        setUpdateMusicVisible(false);\r\n        getMusic()\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title='音乐列表'\r\n                extra={<Button type=\"primary\" onClick={() => {\r\n                    setMusicVisible(true)\r\n                }}><PlusOutlined />新建音乐</Button>}\r\n            >\r\n                <Table bordered rowKey=\"_id\" dataSource={dataSource} columns={columns} />\r\n            </Card>\r\n            {musicVisible ?\r\n                <AddMusic\r\n                    visible={musicVisible}\r\n                    onCancel={onAddCancel}\r\n                    onSuccess={onAddSuccess}\r\n                /> : null\r\n            }\r\n            {updateMusicVisible ?\r\n                <UpdateMusic\r\n                    visible={updateMusicVisible}\r\n                    values={values}\r\n                    onSuccess={onUpdateSuccess}\r\n                    onCancel={onUpdateCancel}\r\n                /> : null\r\n\r\n\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\AddMusic.js",["102"],"import React, { useState } from 'react'\r\nimport { Modal, Form, Input, message, Button, Upload } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { onCancel, onSuccess, visible } = props;\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.addMusic,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                console.log('---------------------')\r\n                message.success('保存成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('保存失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error('保存失败')\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={onCancel}\r\n            title=\"添加歌曲\"\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n            // form={form}\r\n            >\r\n                <Form.Item\r\n                    label=\"歌曲\"\r\n                    name=\"name\"\r\n                    rules={[{ message: '请输入歌曲', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入歌曲\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"作者\"\r\n                    name=\"artist\"\r\n                    rules={[{ required: true, message: '请输入作者' }]}\r\n                >\r\n                    <Input placeholder=\"请输入作者\" />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item label='图片' name=\"image\">\r\n                    <Upload\r\n                        name=\"avatar\"\r\n                        listType=\"picture-card\"\r\n                        style={{ width: 128, height: 128 }}\r\n                        className=\"avatar-uploader\"\r\n                        showUploadList={false}\r\n\r\n                        onChange={(e) => { console.log(e) }} >\r\n                        <img src=\"\" alt=\"avatar\" style={{ width: '100%' }} />\r\n                    </Upload>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item label=\"歌曲网址\" name=\"url\" rules={[{ required: true, message: '请输入歌曲网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲网址\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲图片\" name=\"cover\" rules={[{ required: true, message: '请输入歌曲图片网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲图片网址\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\music\\components\\UpdateMusic.js",["103"],"import React, { useState } from 'react'\r\nimport { Modal, Form, Input, message, Button } from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../../../config/apiAdminUrl';\r\n\r\n\r\nexport default (props) => {\r\n    console.log(props)\r\n    const [form] = Form.useForm();\r\n\r\n    const { onCancel, onSuccess, visible, values } = props;\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const onSubmit = async (formValues) => {\r\n        setSubmitting(true)\r\n        formValues._id = values._id;\r\n        try {\r\n            console.log(formValues)\r\n            const response = await axios({\r\n                url: servicePath.updateMusic,\r\n                method: \"POST\",\r\n                data: formValues\r\n            })\r\n            if (response) {\r\n                message.success('修改成功')\r\n                setSubmitting(false)\r\n                onSuccess();\r\n            } else {\r\n                message.error('修改失败')\r\n            }\r\n        } catch (error) {\r\n\r\n            message.error(error)\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            footer={null}\r\n            onCancel={onCancel}\r\n            title=\"修改歌曲\"\r\n\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"modalUpdate\"\r\n                layout=\"horizontal\"\r\n                onFinish={onSubmit}\r\n                initialValues={{ ...values }}\r\n            // form={form}\r\n            >\r\n                <Form.Item\r\n                    label=\"歌曲\"\r\n                    name=\"name\"\r\n                    rules={[{ message: '请输入歌曲', required: true }]}\r\n                >\r\n                    <Input placeholder=\"请输入歌曲\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"作者\"\r\n                    name=\"artist\"\r\n                    rules={[{ required: true, message: '请输入作者' }]}\r\n                >\r\n                    <Input placeholder=\"请输入作者\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲网址\" name=\"url\" rules={[{ required: true, message: '请输入歌曲网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲网址\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"歌曲图片\" name=\"cover\" rules={[{ required: true, message: '请输入歌曲图片网址' }]}>\r\n                    <Input placeholder=\"请输入歌曲图片网址\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitting}>提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\Chart.js",["104"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line, Pie } from \"@ant-design/charts\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiAdminUrl\";\r\nimport moment from \"moment\";\r\nimport { Card } from \"antd\";\r\n\r\nexport default (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [pieData, setPieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getStatistics();\r\n  }, []);\r\n  useEffect(() => {\r\n    getPie();\r\n  }, []);\r\n  const getStatistics = () => {\r\n    Axios({\r\n      url: servicePath.statistics,\r\n      method: \"GET\",\r\n    }).then((res) => {\r\n      setData(res.data.data);\r\n    });\r\n  };\r\n\r\n  const getPie = () => {\r\n    Axios({\r\n      url: servicePath.pie,\r\n      method: \"GET\",\r\n    }).then((res) => {\r\n      setPieData(res.data.data);\r\n    });\r\n  };\r\n  const config = {\r\n    data: data,\r\n    xField: \"year\",\r\n    yField: \"value\",\r\n    seriesField: \"name\",\r\n    xAxis: {\r\n      label: {\r\n        formatter: function formatter(x) {\r\n          return x ? moment(x).format(\"YYYY-MM-DD\") : null;\r\n        },\r\n      },\r\n      tickCount: 30,\r\n      // tickInterval: 20,\r\n      type: \"time\",\r\n    },\r\n    yAxis: {\r\n      label: {\r\n        formatter: function formatter(v) {\r\n          return \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n            return \"\".concat(s, \",\");\r\n          });\r\n        },\r\n      },\r\n      autoHide: true,\r\n      tickCount: 20,\r\n      // tickInterval: 30,\r\n    },\r\n    legend: { position: \"top\" },\r\n    // smooth: true,\r\n    animation: {\r\n      appear: {\r\n        animation: \"path-in\",\r\n        duration: 5000,\r\n      },\r\n    },\r\n    color: [\r\n      \"#1979C9\",\r\n      \"#D62A0D\",\r\n      \"#FAA219\",\r\n      \"#ffccc7\",\r\n      \"#ffbb96\",\r\n      \"#ffd591\",\r\n      \"#ffd666\",\r\n      \"#fff566\",\r\n      \"#d3f261\",\r\n      \"#95de64\",\r\n      \"#5cdbd3\",\r\n      \"#69c0ff\",\r\n      \"#85a5ff\",\r\n      \"#b37feb\",\r\n      \"#ff85c0\",\r\n    ],\r\n  };\r\n\r\n  const PieConfig = {\r\n    appendPadding: 10,\r\n    data: pieData,\r\n    angleField: \"value\",\r\n    colorField: \"name\",\r\n    radius: \"0.9\",\r\n    label: {\r\n      type: \"inner\",\r\n      offset: \"-30%\",\r\n      content: \"{value}\",\r\n    },\r\n\r\n    // content: function content(_ref) {\r\n    //     var percent = _ref.percent;\r\n    //     return ''.concat(percent * 100, '%');\r\n    // },\r\n    style: {\r\n      fontSize: 14,\r\n      textAlign: \"center\",\r\n    },\r\n    interactions: [{ type: \"element-active\" }],\r\n  };\r\n\r\n  console.log(PieConfig);\r\n  return (\r\n    <div>\r\n      <Card title=\"文章访问数量\">\r\n        <Line {...config} />\r\n      </Card>\r\n\r\n      <Card title=\"类型访问量\" style={{ marginTop: 10 }}>\r\n        <Pie {...PieConfig} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\slideshow\\index.js",[],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\Pages\\slideshow\\components\\SlideShowEdit.js",["105","106"],"import {\r\n  Upload,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  InputNumber,\r\n  message,\r\n} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport servicePath from \"../../../config/apiAdminUrl\";\r\nimport axios from \"axios\";\r\nconst { Option } = Select;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n  const [form] = Form.useForm();\r\n  const { values, visible, onSuccess, onCancel } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [articleList, setArticleList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (values?.id) {\r\n      setImageUrl(values?.files_url);\r\n    }\r\n  }, []);\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  const onChange = (info) => {\r\n    setLoading(true);\r\n    if (info?.file?.response?.code == 200) {\r\n      setImageUrl(info?.file.response.data.url.file);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // 模糊查询文章\r\n  const selectTitleChange = (val) => {\r\n    if (\r\n      val &&\r\n      (/^[\\u4e00-\\u9fa5]+$/i.test(val) || /^[0-9]+.?[0-9]*/.test(val))\r\n    ) {\r\n      const params = { title: val };\r\n      axios\r\n        .get(servicePath.getArticle, { params })\r\n        .then((res) => {\r\n          if (res?.data?.data) {\r\n            setArticleList(res?.data?.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const onFinish = (val) => {\r\n    val._id = values?._id;\r\n    val.files_url = imageUrl;\r\n    const data = val;\r\n    if (val?._id) {\r\n      axios\r\n        .post(servicePath.updateSlideShow, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res?.status === 200) {\r\n            message.success(\"保存成功\");\r\n            onSuccess();\r\n          } else {\r\n            message.error(\"保存失败\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          message.error(err);\r\n        });\r\n    } else if (!val?._id) {\r\n      axios\r\n        .post(servicePath.addSlideShow, data)\r\n        .then((res) => {\r\n          if (res?.status === 200) {\r\n            message.success(\"保存成功\");\r\n            onSuccess();\r\n          } else {\r\n            message.error(\"保存失败\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          message.error(err);\r\n        });\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 9, span: 15 },\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"更新轮播图\"\r\n      visible={visible}\r\n      footer={null}\r\n      onCancel={onCancel}\r\n    >\r\n      <Form\r\n        layout=\"horizontal\"\r\n        onFinish={onFinish}\r\n        initialValues={{ ...values }}\r\n        form={form}\r\n      >\r\n        <Form.Item label=\"名称\" name=\"name\">\r\n          <Input placeholder=\"请输入轮播图名称\"></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"关联文章\" name=\"article_id\">\r\n          <Select\r\n            placeholder=\"请输入轮播图名称\"\r\n            onSearch={selectTitleChange}\r\n            allowClear\r\n            filterOption\r\n            showSearch\r\n            optionFilterProp=\"children\"\r\n          >\r\n            {articleList?.map((item, index) => {\r\n              return (\r\n                <Option value={item?._id} key={item?._id + index}>\r\n                  {item?.title}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"图片\">\r\n          <Upload\r\n            name=\"file\"\r\n            listType=\"picture-card\"\r\n            onChange={onChange}\r\n            showUploadList={false}\r\n            action={servicePath.upload}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"slideshow\" style={{ width: \"100%\" }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\" name=\"sort\">\r\n          <InputNumber placeholder=\"请输入轮播图位置\"></InputNumber>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button htmlType=\"submit\">提交</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\router\\index.js",["107"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\plugins\\request.js",["108"],"import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst request = axios.create({\r\n  baseURL: \"\",\r\n  timeout: 20000,\r\n});\r\n\r\nrequest.interceptors.request.use(\r\n  (config) => {\r\n    if (\r\n      config.method === \"post\" ||\r\n      config.method === \"POST\" ||\r\n      config.method === \"Post\"\r\n    ) {\r\n      console.log(config);\r\n      config.headers[\"Authorization\"] = \"Bearer \" + new Date().getTime();\r\n      config.headers[\"X-Request-Id\"] = +new Date();\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      // config.data = qs.stringify(config.data);\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.log(error);\r\n    Promise.reject(error);\r\n  }\r\n);\r\nexport default request;\r\n",["109","110"],"C:\\Users\\Administrator\\Documents\\学习笔记\\React\\React博客\\myadmin\\src\\cookie\\cookie.js",[],{"ruleId":"111","severity":1,"message":"112","line":45,"column":6,"nodeType":"113","endLine":45,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":181,"column":27,"nodeType":"117","messageId":"118","endLine":181,"endColumn":29},{"ruleId":"111","severity":1,"message":"119","line":29,"column":6,"nodeType":"113","endLine":29,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":1,"nodeType":"123","endLine":124,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":6,"column":1,"nodeType":"123","endLine":70,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":6,"column":1,"nodeType":"123","endLine":72,"endColumn":3},{"ruleId":"121","severity":1,"message":"122","line":9,"column":1,"nodeType":"123","endLine":124,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":7,"column":1,"nodeType":"123","endLine":93,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":7,"column":1,"nodeType":"123","endLine":79,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":8,"column":1,"nodeType":"123","endLine":124,"endColumn":3},{"ruleId":"111","severity":1,"message":"124","line":29,"column":6,"nodeType":"113","endLine":29,"endColumn":8,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"116","line":39,"column":36,"nodeType":"117","messageId":"118","endLine":39,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"130","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":10},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fecthType', 'getArticle', and 'props.location.query.record'. Either include them or remove the dependency array.","ArrayExpression",["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getArticleList'. Either include it or remove the dependency array.",["136"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'values?.files_url' and 'values?.id'. Either include them or remove the dependency array.",["137"],"no-unused-vars","'request' is defined but never used.","Identifier","unusedVar","'qs' is defined but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fecthType, getArticle, props.location.query.record]",{"range":"146","text":"147"},"Update the dependencies array to be: [getArticleList]",{"range":"148","text":"149"},"Update the dependencies array to be: [values?.files_url, values?.id]",{"range":"150","text":"151"},[1612,1614],"[fecthType, getArticle, props.location.query.record]",[772,774],"[getArticleList]",[786,788],"[values?.files_url, values?.id]"]